<Window x:Class="FileExplorer.MVVM.Views.ReplaceView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FileExplorer.MVVM.Views"
        xmlns:b="clr-namespace:FileExplorer.MVVM.Behaviours"
        mc:Ignorable="d"
        Title="Replace" Height="450" Width="450"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize">

    <Grid Background="#E5EEFF">

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="6.5*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.Resources>
            <Style TargetType="RadioButton">
                <Setter Property="Margin" Value="10,10,0,0"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Padding" Value="0,0,0,0"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Width" Value="70px"/>
                <Setter Property="Height" Value="25px"/>
                <Setter Property="Margin" Value="0,0,10,0"/>
            </Style>
            <Style TargetType="Button" x:Key="Ok">
                <Setter Property="Width" Value="70px"/>
                <Setter Property="Height" Value="25px"/>
                <Setter Property="Margin" Value="0,0,10,0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsChecked, ElementName=radio2}" Value="True">
                        <Setter Property="CommandParameter" Value="{Binding SelectedItem, ElementName=tree}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsChecked, ElementName=radio2}" Value="False">
                        <Setter Property="CommandParameter" Value="{Binding Text, ElementName=textBox}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Width" Value="400px"/>
            </Style>
        </Grid.Resources>
        
        <RadioButton IsChecked="True"
                     Name="radio1">
            <StackPanel>

                <StackPanel.Resources>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=radio1}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <Label Content="Path"/>
                <TextBox x:Name="textBox"/>
            </StackPanel>
        </RadioButton>
        
        <RadioButton Grid.Row="1"
                     Name="radio2">
            <StackPanel>

                <StackPanel.Resources>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=radio2}" Value="False">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                
                <Label Content="Directory Tree"/>
                <TreeView Name="tree"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          Width="400px"
                          Height="300px"
                          ItemsSource="{Binding Items}">

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="b:TreeBehaviour.ExpandingBehaviour"
                                    Value="{Binding Path=DataContext.TreeExpandedCommand, 
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>

                </TreeView>
            </StackPanel>
        </RadioButton>

        <StackPanel Grid.Row="2" 
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button Content="Storno"
                    Command="{Binding StornoCommand}"/>
            <Button Content="Ok"
                    Style="{StaticResource Ok}"
                    Command="{Binding OkCommand}"/>
        </StackPanel>
        
    </Grid>
</Window>
